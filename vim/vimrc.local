" Colors - important almost-literal bike shedding decisions and settings here
set background=dark
let base16colorspace=256  " Access colors present in 256 colorspace
if !has('gui_running')
  set t_Co=256
endif
let g:lightline = { 'colorscheme': 'nord' }
colorscheme nord

set cursorline
set listchars=trail:Â·
set noundofile
set undodir=/tmp/vimundofiles
set number
set textwidth=110  " lol ruby code
set tw=110
set hidden  " don't warn on unsaved files

" temp files - you need to create these manually
" I will not do some conditional or trickery when vim boots, unneeded if you just remember to
" make these directories.
set directory=~/.vim/swap
set backupdir=~/.vim/tmp


let mapleader = ","
let g:mapleader = ","

" whitespace
set tabstop=2 shiftwidth=2 expandtab smarttab

" Oh hell no easy-mode!  :P
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>


" ctrl-p stuff
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\.git$\|\.hg$\|\.svn$\|bower_components$\|dist$\|node_modules$\|tmp$\|app/assets$',
    \ 'file': '\.exe$\|\.so$\|\.dll$\|\.pyc$\|\.swp$' }
let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

" toggle buffer list
map <C-l> :BuffergatorToggle<CR>

" fancier status line drawing
let g:airline_powerline_fonts=1

" golang files
au BufNewFile,BufRead *.go setlocal noet ts=4 sw=4 sts=4
au BufNewFile,BufRead *.go set nolist
au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)


" File explorer
let g:vimfiler_as_default_explorer = 1
nnoremap <C-N> :<C-u>VimFilerExplorer -split -simple -parent -winwidth=45 -toggle -no-quit<CR>

" Insert the date at the top of a development log.
" http://squarism.com/2015/11/13/why-a-dev-log-is-great/
nmap <leader>N ggi# <C-R>=strftime("%Y-%m-%d - %A")<CR><CR><CR>

" convert 1.9 hashes to 2.0
command! -bar -range=% NotRocket :<line1>,<line2>s/:\@<!:\(\w\+\)\s*=>/\1:/ge
map <leader>R  :NotRocket<CR>

map <leader>d :bd<CR>
map <leader>D :BD<CR>

" align by equals
map <leader>= :Tabularize/=<CR>

" Testing
nmap <silent> <leader>s :TestNearest<CR>
" quick switch between tests
nmap tt :A<CR>

let g:turbux_command_prefix = 'bundle exec'

" turn off vim-json quotes autohiding, even though I love them, it's confusing
let g:vim_json_syntax_conceal = 0

set tags=./tags,tags;$HOME

" change easymotion prefix
map <SPACE> <Plug>(easymotion-prefix)

" vim-seek - type two letters just like f
" In other words, use it like f/F but with s/S and two letters minimum
" This setting replaces s (substitute - which I never use) with vim-seek
let g:seek_subst_disable = 1

" Golang and vim-go
set autowrite

" Markdown options
let g:vim_markdown_emphasis_multiline = 0
